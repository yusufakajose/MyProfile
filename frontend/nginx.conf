map $http_user_agent $is_social_bot {
    default 0;
    ~*(facebookexternalhit|facebot|twitterbot|slackbot|linkedinbot|discordbot|pinterestbot|whatsapp|telegram|telegrambot|skypeuripreview|vkshare|metainspector|bitlybot|quora|duckduckbot|embedly|outbrain|qwantify|redditbot|bingbot|yandexbot|baiduspider|sogou|ia_archiver|applebot|google.*snippet|google.*structureddatabot) 1;
}

server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # Social preview for public profiles: bots get server-rendered meta
    location ~ ^/u/([^/]+)/?$ {
        if ($is_social_bot) {
            rewrite ^/u/([^/]+)/?$ /api/public/meta/$1 last;
        }
        try_files $uri /index.html;
    }

    # Proxy API to backend service in compose
    location /api/ {
        proxy_pass http://backend:8080/api/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }

    # Redirect short links to backend
    location /r/ {
        proxy_pass http://backend:8080/r/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }

    # SPA routing fallback
    location / {
        try_files $uri /index.html;
    }
}


